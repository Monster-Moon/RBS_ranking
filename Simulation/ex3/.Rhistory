###### CBS 10 ##########
load('ex1_500_n10.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_10 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_10 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_10 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_10)
colMeans(tv_return_mat_10)
colMeans(hd_return_mat_10)
###### CBS 50 ##########
load('ex1_500_n50.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_50 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_50 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_50 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_50)
colMeans(tv_return_mat_50)
colMeans(hd_return_mat_50)
###### CBS 100 ##########
load('ex1_500_n100.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_100 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_100 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_100 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_100)
colMeans(tv_return_mat_100)
colMeans(hd_return_mat_100)
#### summary ####
kl_return_mat = cbind(kl_return_mat_10, kl_return_mat_50, kl_return_mat_100,
kl_btm_10_vec, kl_btm_50_vec, kl_btm_100_vec, kl_bt_vec)
tv_return_mat = cbind(tv_return_mat_10, tv_return_mat_50, tv_return_mat_100,
tv_btm_10_vec, tv_btm_50_vec, tv_btm_100_vec, tv_bt_vec)
hd_return_mat = cbind(hd_return_mat_10, hd_return_mat_50, hd_return_mat_100,
hd_btm_10_vec, hd_btm_50_vec, hd_btm_100_vec, hd_bt_vec)
kl_return_mat
c(paste(rep(c('BS', 'CBS'), 3), rep(c(10, 50, 100), each = 2)), 'BT')
c(paste(rep(c('BS', 'CBS'), 3), rep(c(10, 50, 100), each = 2)), paste('BTM', c(10, 50, 100)), 'BT')
colnames(kl_return_mat) = colnames(tv_return_mat) = colnames(hd_return_mat) =
c(paste(rep(c('BS', 'CBS'), 3), rep(c(10, 50, 100), each = 2)), paste('BTM', c(10, 50, 100)), 'BT')
kl_return_mat
sim1_result = list(kl_return_mat, tv_return_mat, hd_return_mat)
save(sim1_result, file = '../sim1_result.Rdata')
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex2')
source('../model.R')
n_items = 5
n_items_comb = n_items * (n_items - 1) / 2
A_mat = A_mat_fun(n_items = n_items) ## design matrix
gamma_star = c(0, -0.1, 0.05, -0.05, 0.1, 0.05, 0.05, -0.1, -0.1, 0.1)
gamma_ratio = 1
beta_star = c(-1, -0.8, 0.5, 0.7, 0.6, gamma_star * gamma_ratio)
theta_star = A_mat %*% beta_star
theta_star = theta_star[1:n_items_comb]
permu_items = permutations(5)
all_data = x_data_generates(data = permu_items)
prob_star = exp(all_data %*% theta_star) / sum(exp(all_data %*% theta_star))
########### BT #############
load('ex2_500_bt.Rdata')
bt_theta_list = lapply(bt_model_list,
function(x) A_mat[1:n_items_comb, 1:n_items] %*% c(0, x$coefficients))
prob_bt_est = lapply(bt_theta_list, function(x)
exp(all_data %*% x) / sum(exp(all_data %*% x)))
kl_bt_vec = lapply(prob_bt_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_bt_vec = lapply(prob_bt_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_bt_vec = lapply(prob_bt_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
mean(kl_bt_vec)
mean(tv_bt_vec)
mean(hd_bt_vec)
######### BTM ##############
load('ex2_btm_n10.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_10_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_10_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_10_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
load('ex2_btm_n50.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_50_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_50_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_50_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
load('ex2_btm_n100.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_100_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_100_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_100_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
###### CBS 10 ##########
load('ex2_500_n10.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_10 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_10 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_10 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_10)
colMeans(tv_return_mat_10)
colMeans(hd_return_mat_10)
###### CBS 50 ##########
load('ex2_500_n50.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_50 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_50 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_50 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_50)
colMeans(tv_return_mat_50)
colMeans(hd_return_mat_50)
###### CBS 100 ##########
load('ex2_500_n100.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_100 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_100 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_100 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_100)
colMeans(tv_return_mat_100)
colMeans(hd_return_mat_100)
#### summary ####
kl_return_mat = cbind(kl_return_mat_10, kl_return_mat_50, kl_return_mat_100,
kl_btm_10_vec, kl_btm_50_vec, kl_btm_100_vec, kl_bt_vec)
tv_return_mat = cbind(tv_return_mat_10, tv_return_mat_50, tv_return_mat_100,
tv_btm_10_vec, tv_btm_50_vec, tv_btm_100_vec, tv_bt_vec)
hd_return_mat = cbind(hd_return_mat_10, hd_return_mat_50, hd_return_mat_100,
hd_btm_10_vec, hd_btm_50_vec, hd_btm_100_vec, hd_bt_vec)
# kl_return_mat = cbind(kl_return_mat_10, kl_return_mat_50, kl_return_mat_100, kl_return_mat_300, kl_bt_vec)
# tv_return_mat = cbind(tv_return_mat_10, tv_return_mat_50, tv_return_mat_100, tv_return_mat_300, tv_bt_vec)
# hd_return_mat = cbind(hd_return_mat_10, hd_return_mat_50, hd_return_mat_100, hd_return_mat_300, hd_bt_vec)
colnames(kl_return_mat) = colnames(tv_return_mat) = colnames(hd_return_mat) =
c(paste(rep(c('BS', 'CBS'), 3), rep(c(10, 50, 100), each = 2)), paste('BTM', c(10, 50, 100)), 'BT')
sim2_result = list(kl_return_mat, tv_return_mat, hd_return_mat)
save(sim2_result, file = '../sim2_result.Rdata')
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('../model.R')
gamma_star = c(0, -0.1, 0.05, -0.05, 0.1, 0.05, 0.05, -0.1, -0.1, 0.1)
gamma_ratio = 1
beta_star = c(0.7, 0.5, 0, -0.4, -0.8, gamma_star * gamma_ratio)
theta_star = A_mat %*% beta_star
theta_star = theta_star[1:n_items_comb]
permu_items = permutations(5)
all_data = x_data_generates(data = permu_items)
rm(list = ls())
gc(reset = T)
if(!require(dplyr)) install.packages('dplyr'); require(dplyr)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('../model.R')
n_items = 5
n_items_comb = n_items * (n_items - 1) / 2
A_mat = A_mat_fun(n_items = n_items) ## design matrix
gamma_star = c(0, -0.1, 0.05, -0.05, 0.1, 0.05, 0.05, -0.1, -0.1, 0.1)
gamma_ratio = 1
beta_star = c(0.7, 0.5, 0, -0.4, -0.8, gamma_star * gamma_ratio)
theta_star = A_mat %*% beta_star
theta_star = theta_star[1:n_items_comb]
permu_items = permutations(5)
all_data = x_data_generates(data = permu_items)
prob_star = exp(all_data %*% theta_star) / sum(exp(all_data %*% theta_star))
########### BT #############
load('ex3_500_bt.Rdata')
bt_theta_list = lapply(bt_model_list,
function(x) A_mat[1:n_items_comb, 1:n_items] %*% c(0, x$coefficients))
prob_bt_est = lapply(bt_theta_list, function(x)
exp(all_data %*% x) / sum(exp(all_data %*% x)))
kl_bt_vec = lapply(prob_bt_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_bt_vec = lapply(prob_bt_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_bt_vec = lapply(prob_bt_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
mean(kl_bt_vec)
mean(tv_bt_vec)
mean(hd_bt_vec)
######### BTM ##############
load('ex3_btm_n10.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_10_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_10_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_10_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
load('ex3_btm_n50.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_50_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_50_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_50_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
load('ex3_btm_n100.Rdata')
prob_btm_est = lapply(model_list, function(x)
exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat)))
kl_btm_100_vec = lapply(prob_btm_est, function(x) -sum(prob_star * log(x))) %>% unlist()
tv_btm_100_vec = lapply(prob_btm_est, function(x) sum(abs(x - prob_star))) %>% unlist()
hd_btm_100_vec = lapply(prob_btm_est, function(x) sum((sqrt(prob_star) - sqrt(x))^2)) %>% unlist()
###### CBS 10 ##########
load('ex3_500_n10.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_10 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_10 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_10 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_10)
colMeans(tv_return_mat_10)
colMeans(hd_return_mat_10)
###### CBS 50 ##########
load('ex3_500_n50.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_50 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_50 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_50 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_50)
colMeans(tv_return_mat_50)
colMeans(hd_return_mat_50)
###### CBS 100 ##########
load('ex3_500_n100.Rdata')
prob_est = lapply(model_list, function(y)
lapply(y, function(x) exp(all_data %*% x$theta_hat) / sum(exp(all_data %*% x$theta_hat))))
kl_list = lapply(prob_est, function(y)
lapply(y, function(x) -sum(prob_star * log(x))))
kl_mat = lapply(kl_list, unlist) %>% do.call('rbind', .)
boxplot(kl_mat)
tv_list = lapply(prob_est, function(y)
lapply(y, function(x) sum(abs(x - prob_star))))
tv_mat = lapply(tv_list, unlist) %>% do.call('rbind', .)
hd_list = lapply(prob_est, function(y)
lapply(y, function(x) sum((sqrt(prob_star) - sqrt(x))^2)))
hd_mat = lapply(hd_list, unlist) %>% do.call('rbind', .)
kl_return_mat_100 = cbind(kl_mat[, 1], kl_mat[, 5])
tv_return_mat_100 = cbind(tv_mat[, 1], tv_mat[, 5])
hd_return_mat_100 = cbind(hd_mat[, 1], hd_mat[, 5])
colMeans(kl_return_mat_100)
colMeans(tv_return_mat_100)
colMeans(hd_return_mat_100)
#### summary ####
kl_return_mat = cbind(kl_return_mat_10, kl_return_mat_50, kl_return_mat_100,
kl_btm_10_vec, kl_btm_50_vec, kl_btm_100_vec, kl_bt_vec)
tv_return_mat = cbind(tv_return_mat_10, tv_return_mat_50, tv_return_mat_100,
tv_btm_10_vec, tv_btm_50_vec, tv_btm_100_vec, tv_bt_vec)
hd_return_mat = cbind(hd_return_mat_10, hd_return_mat_50, hd_return_mat_100,
hd_btm_10_vec, hd_btm_50_vec, hd_btm_100_vec, hd_bt_vec)
# kl_return_mat = cbind(kl_return_mat_10, kl_return_mat_50, kl_return_mat_100, kl_return_mat_300, kl_bt_vec)
# tv_return_mat = cbind(tv_return_mat_10, tv_return_mat_50, tv_return_mat_100, tv_return_mat_300, tv_bt_vec)
# hd_return_mat = cbind(hd_return_mat_10, hd_return_mat_50, hd_return_mat_100, hd_return_mat_300, hd_bt_vec)
colnames(kl_return_mat) = colnames(tv_return_mat) = colnames(hd_return_mat) =
c(paste(rep(c('BS', 'CBS'), 3), rep(c(10, 50, 100), each = 2)), paste('BTM', c(10, 50, 100)), 'BT')
head(kl_return_mat)
boxplot(kl_return_mat)
boxplot(tv_return_mat)
boxplot(hd_return_mat)
colMeans(kl_return_mat)
colMeans(tv_return_mat)
colMeans(hd_return_mat)
mean(kl_bt_vec)
mean(tv_bt_vec)
sim3_result = list(kl_return_mat, tv_return_mat, hd_return_mat)
save(sim3_result, file = '../sim3_result.Rdata')
colMeans(kl_return_mat)
colMeans(tv_return_mat)
colMeans(hd_return_mat)
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('..\\model.R')
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('..\\model.R')
n_items = 5
n_items_comb = n_items * (n_items - 1) / 2
A_mat = A_mat_fun(n_items = n_items) ## design matrix
gamma_star = c(0, -0.1, 0.05, -0.05, 0.1, 0.05, 0.05, -0.1, -0.1, 0.1)
gamma_ratio = 1
beta_star = c(0.7, 0.5, 0, -0.4, -0.8, gamma_star * gamma_ratio)
theta_star = A_mat %*% beta_star
theta_star = theta_star[1:n_items_comb]
test_rank_data = permutations(n_items)
test_data = x_data_generates(data = test_rank_data)
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('..\\model.R')
source('../model.R')
n_items = 5
n_items_comb = n_items * (n_items - 1) / 2
A_mat = A_mat_fun(n_items = n_items) ## design matrix
gamma_star = c(0, -0.1, 0.05, -0.05, 0.1, 0.05, 0.05, -0.1, -0.1, 0.1)
gamma_ratio = 1
beta_star = c(0.7, 0.5, 0, -0.4, -0.8, gamma_star * gamma_ratio)
theta_star = A_mat %*% beta_star
theta_star = theta_star[1:n_items_comb]
test_rank_data = permutations(n_items)
test_data = x_data_generates(data = test_rank_data)
n = 500L
sample_prob = exp(test_data %*% theta_star) / sum(exp(test_data %*% theta_star))
x_data_list = vector('list', 100)
for(i in 1:100)
{
sample_inx = sample(1:nrow(test_data), size = n, replace = T, prob = sample_prob)
sample_inx = factor(sample_inx, levels = 1:nrow(test_data))
sample_inx_prop = table(sample_inx) / sum(table(sample_inx))
x_data_list[[i]] = test_rank_data[sample_inx, ]
cat(i, '\n')
}
save(x_data_list, file = 'ex3_data_list_500.Rdata')
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('../model.R')
load('ex3_data_list_500.Rdata')
lambda_candidate = seq(0, 0.2, 0.05)
model_list = vector('list', length(x_data_list))
for(i in 1:100)
{
tmp_model_list = vector('list', 5)
for(j in 1:5)
{
tmp_model_list[[j]] = cbs_fit(x = x_data_list[[i]],
sim_n = 10,
eta = 0.05,
max_iter = 1000,
lambda1 = lambda_candidate[j],
lambda2 = 0,
eps = 1e-4)
}
model_list[[i]] = tmp_model_list
cat(i, '\n')
}
save(model_list, file = 'ex3_500_n10.Rdata')
model_list = vector('list', length(x_data_list))
for(i in 1:100)
{
tmp_model_list = vector('list', 5)
for(j in 1:5)
{
tmp_model_list[[j]] = cbs_fit(x = x_data_list[[i]],
sim_n = 50,
eta = 0.05,
max_iter = 1000,
lambda1 = lambda_candidate[j],
lambda2 = 0,
eps = 1e-4)
}
model_list[[i]] = tmp_model_list
cat(i, '\n')
}
save(model_list, file = 'ex3_500_n50.Rdata')
model_list = vector('list', length(x_data_list))
for(i in 1:100)
{
tmp_model_list = vector('list', 5)
for(j in 1:5)
{
tmp_model_list[[j]] = cbs_fit(x = x_data_list[[i]],
sim_n = 100,
eta = 0.05,
max_iter = 1000,
lambda1 = lambda_candidate[j],
lambda2 = 0,
eps = 1e-4)
}
model_list[[i]] = tmp_model_list
cat(i, '\n')
}
save(model_list, file = 'ex3_500_n100.Rdata')
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('../model.R')
if(!require(BradleyTerry2)) install.packages('BradleyTerry2'); require(BradleyTerry2)
load('ex3_data_list_500.Rdata')
n_items = 5
n_items_comb = n_items * (n_items - 1) / 2
A_mat = A_mat_fun(n_items)
tmp_bt_data = expand.grid(1:n_items, 1:n_items)
tmp_bt_data = tmp_bt_data[tmp_bt_data[, 1] < tmp_bt_data[, 2], ] %>% arrange(Var1)
bt_data_list = vector('list', 100)
bt_model_list = vector('list', 100)
for(i in 1:100)
{
bt_data = cbind(tmp_bt_data, t(apply(x_data_generates(x_data_list[[i]]), 2, table))[,2:1])
bt_data$Var1 = factor(bt_data$Var1, levels = 1:n_items)
bt_data$Var2 = factor(bt_data$Var2, levels = 1:n_items)
colnames(bt_data) = c('home_team', 'away_team', 'home_win', 'away_win')
bt_data_list[[i]] = bt_data
bt_model_list[[i]] = BTm(cbind(home_win, away_win), home_team, away_team, data = bt_data, id = "team")
cat(i, '\n')
}
save(bt_model_list, file = 'ex3_500_bt.Rdata')
rm(list = ls())
gc(reset = T)
setwd('/Users/moon/Documents/CBS_model/code/simulation_code/ex3')
source('../model.R')
load('ex3_data_list_500.Rdata')
model_list = vector('list', length(x_data_list))
for(i in 1:100)
{
model_list[[i]] = btm_fit(x = x_data_list[[i]],
sim_n = 10,
eta = 0.05,
max_iter = 1000,
lambda1 = 0,
lambda2 = 0,
eps = 1e-4)
cat(i, '\n')
}
save(model_list, file = 'ex3_btm_n10.Rdata')
for(i in 1:100)
{
model_list[[i]] = btm_fit(x = x_data_list[[i]],
sim_n = 50,
eta = 0.05,
max_iter = 1000,
lambda1 = 0,
lambda2 = 0,
eps = 1e-4)
cat(i, '\n')
}
save(model_list, file = 'ex3_btm_n50.Rdata')
for(i in 1:100)
{
model_list[[i]] = btm_fit(x = x_data_list[[i]],
sim_n = 100,
eta = 0.05,
max_iter = 1000,
lambda1 = 0,
lambda2 = 0,
eps = 1e-4)
cat(i, '\n')
}
save(model_list, file = 'ex3_btm_n100.Rdata')
